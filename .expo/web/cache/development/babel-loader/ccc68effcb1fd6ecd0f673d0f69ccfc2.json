{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dillenerb/lakemonsterreactOctoberOctober/screens/LakesSimpleScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport lakesApi from \"../api/lakes\";\nimport Screen from \"../components/Screen\";\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport useLocation from \"../hooks/useLocation\";\nimport LakeCard1 from \"../components/LakeCard1\";\nexport default function LakesSimpleScreen() {\n  var _this = this;\n\n  var geoLocation = useLocation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lakes = _useState2[0],\n      setLakes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      offset = _useState4[0],\n      setOffset = _useState4[1];\n\n  var _useState5 = useState(geoLocation),\n      _useState6 = _slicedToArray(_useState5, 2),\n      location = _useState6[0],\n      setLocation = _useState6[1];\n\n  useEffect(function () {\n    if (global.location) {\n      console.log(\"global location\", global.location);\n      var a = zeroOffset();\n      var b = setLakes([]);\n      var c = loadLakesInit();\n    }\n\n    return function () {};\n  }, []);\n  var limit = 20;\n\n  var loadLakes = function loadLakes() {\n    var response;\n    return _regeneratorRuntime.async(function loadLakes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"getting lakes\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(lakesApi.getLakes(offset, limit).then(function (res) {\n              console.log(\"got data\");\n              var newLakes = res.data;\n              setLakes(function (lakes) {\n                return lakes.concat(newLakes);\n              });\n            }).then(function (r) {\n              countOffset();\n            }));\n\n          case 3:\n            response = _context.sent;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadLakesInit = function loadLakesInit() {\n    var response;\n    return _regeneratorRuntime.async(function loadLakesInit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"getting lakes\");\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(lakesApi.getLakes(0, limit).then(function (res) {\n              console.log(\"got data\");\n              var newLakes = res.data;\n              setLakes(function (lakes) {\n                return lakes.concat(newLakes);\n              });\n            }).then(function (r) {\n              countOffset();\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var countOffset = function countOffset() {\n    return _regeneratorRuntime.async(function countOffset$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setOffset(function (offset) {\n              return offset + limit;\n            });\n            console.log(\"Incrment Offset\");\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var zeroOffset = function zeroOffset(num) {\n    return new Promise(function (resolve, reject) {\n      setOffset(0);\n      console.log(\"zero offset\");\n    });\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.searchbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(EvilIcons, {\n    name: \"search\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Type here to translate!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Sport - Fish - Sail\"), React.createElement(FlatList, {\n    data: lakes,\n    keyExtractor: function keyExtractor(lake) {\n      return lake.siteid.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, React.createElement(LakeCard1, {\n        rating: \"80\",\n        siteid: item.siteid,\n        title: item.name,\n        distance: item.distance,\n        img: item.imgUrl,\n        webcams: item.activeCameras,\n        airHigh: parseInt(item.highTemp),\n        airLow: parseInt(item.lowTemp),\n        windHigh: parseInt(item.avgWind),\n        windGust: parseInt(item.avgWindGust),\n        weatherSummary: item.weatherSummary,\n        waterTemp: parseInt(item.waterTemp),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }));\n    },\n    onEndReached: loadLakes,\n    onEndReachedThreshold: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    backgroundColor: \"lightgray\",\n    borderTopWidth: 1,\n    borderColor: \"gray\",\n    height: 165,\n    justifyContent: \"center\"\n  },\n  searchbar: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/dillenerb/lakemonsterreactOctoberOctober/screens/LakesSimpleScreen.js"],"names":["React","useState","useEffect","lakesApi","Screen","FlatList","TextInput","EvilIcons","useLocation","LakeCard1","LakesSimpleScreen","geoLocation","lakes","setLakes","offset","setOffset","location","setLocation","global","console","log","a","zeroOffset","b","c","loadLakesInit","limit","loadLakes","getLakes","then","res","newLakes","data","concat","r","countOffset","response","num","Promise","resolve","reject","styles","searchbar","height","lake","siteid","toString","item","container","name","distance","imgUrl","activeCameras","parseInt","highTemp","lowTemp","avgWind","avgWindGust","weatherSummary","waterTemp","StyleSheet","create","flexDirection","backgroundColor","borderTopWidth","borderColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, Button, Image } from \"react-native\";\nimport lakesApi from \"../api/lakes\";\nimport Screen from \"../components/Screen\";\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport useLocation from \"../hooks/useLocation\";\nimport LakeCard1 from \"../components/LakeCard1\";\n\nexport default function LakesSimpleScreen() {\n  const geoLocation = useLocation();\n  const [lakes, setLakes] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [location, setLocation] = useState(geoLocation);\n\n  useEffect(() => {\n    if (global.location) {\n      console.log(\"global location\", global.location);\n      const a = zeroOffset();\n      const b = setLakes([]);\n      const c = loadLakesInit();\n    }\n\n    return () => {\n      //cleanup\n    };\n  }, []);\n\n  const limit = 20;\n\n  const loadLakes = async () => {\n    console.log(\"getting lakes\");\n    const response = await lakesApi\n      .getLakes(offset, limit)\n      .then(res => {\n        console.log(\"got data\");\n        let newLakes = res.data;\n        setLakes(lakes => lakes.concat(newLakes));\n      })\n      .then(r => {\n        countOffset();\n      });\n  };\n\n  const loadLakesInit = async () => {\n    console.log(\"getting lakes\");\n    const response = await lakesApi\n      .getLakes(0, limit)\n      .then(res => {\n        console.log(\"got data\");\n        let newLakes = res.data;\n        setLakes(lakes => lakes.concat(newLakes));\n      })\n      .then(r => {\n        countOffset();\n      });\n  };\n\n  const countOffset = async () => {\n    setOffset(offset => offset + limit);\n    console.log(\"Incrment Offset\");\n  };\n\n  const zeroOffset = num =>\n    new Promise((resolve, reject) => {\n      setOffset(0);\n      console.log(\"zero offset\");\n    });\n\n  return (\n    <Screen>\n      <View style={styles.searchbar}>\n        <EvilIcons name=\"search\" size={24} color=\"black\" />\n        <TextInput\n          style={{ height: 40 }}\n          placeholder=\"Type here to translate!\"\n        ></TextInput>\n      </View>\n\n      <Text>Sport - Fish - Sail</Text>\n      <FlatList\n        data={lakes}\n        keyExtractor={lake => lake.siteid.toString()}\n        renderItem={({ item }) => (\n          <View style={styles.container}>\n            <LakeCard1\n              rating=\"80\"\n              siteid={item.siteid}\n              title={item.name}\n              distance={item.distance}\n              img={item.imgUrl}\n              webcams={item.activeCameras}\n              airHigh={parseInt(item.highTemp)}\n              airLow={parseInt(item.lowTemp)}\n              windHigh={parseInt(item.avgWind)}\n              windGust={parseInt(item.avgWindGust)}\n              weatherSummary={item.weatherSummary}\n              waterTemp={parseInt(item.waterTemp)}\n            ></LakeCard1>\n          </View>\n        )}\n        onEndReached={loadLakes}\n        onEndReachedThreshold={0.5}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    backgroundColor: \"lightgray\",\n    borderTopWidth: 1,\n    borderColor: \"gray\",\n    height: 165,\n    justifyContent: \"center\"\n  },\n  searchbar: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}